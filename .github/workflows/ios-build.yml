name: iOS Build

on:
  pull_request: { branches: [ main ] }
  push: { branches: [ chore/*, feature/*, fix/* ] }

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app"

      - name: Detect project / target / scheme
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          PROJECT="$(find . -maxdepth 4 -type d -name '*.xcodeproj' | head -n1 || true)"
          if [[ -z "$PROJECT" ]]; then
            echo "::error ::No .xcodeproj found in repo"; ls -R; exit 1
          fi
          TARGET=$(/usr/bin/xcodebuild -list -project "$PROJECT" 2>/dev/null | awk '/Targets:/{f=1;next} f&&NF{print; exit}')
          SCHEME=$(/usr/bin/xcodebuild -list -project "$PROJECT" 2>/dev/null | awk '/Schemes:/{f=1;next} f&&NF{print; exit}')
          echo "project=$PROJECT" >> "$GITHUB_OUTPUT"
          echo "target=$TARGET"   >> "$GITHUB_OUTPUT"
          echo "scheme=$SCHEME"   >> "$GITHUB_OUTPUT"
          echo "Detected: project=$PROJECT target=$TARGET scheme=$SCHEME"

      - name: Build (Debug, generic iOS Simulator)
        shell: bash
        run: |
          set -euo pipefail
          PROJ="${{ steps.detect.outputs.project }}"
          TGT="${{ steps.detect.outputs.target }}"
          SCM="${{ steps.detect.outputs.scheme }}"
          if [[ -n "$TGT" ]]; then
            xcodebuild -project "$PROJ" -target "$TGT" -configuration Debug \
              -destination "generic/platform=iOS Simulator" \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
              build
          elif [[ -n "$SCM" ]]; then
            xcodebuild -project "$PROJ" -scheme "$SCM" -configuration Debug \
              -destination "generic/platform=iOS Simulator" \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
              build
          else
            echo "::error ::No target or scheme detected"; exit 1
          fi
